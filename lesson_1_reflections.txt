How did viewing a diff between two versions of a file help you see the bug that was introduced?
It was very helpfull.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It's easy to go back to a functional version.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having 
versions automatically saved, like Google docs does?
Pros: Logical orientated commits. 
Cons: If a user forgets to commit at the oportune time, it might get to be a bad commit.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, 
like Google Docs, treat each file separately?
In software development, a projecto will most likely have multiple files, so a change will probably in most cases
affect several files. So it will be important to save multiple files.

How can you use the commands git log and git diff to view the history of files?
git log gives me the commits ordered by date, with the commit ID and description. 
The git diff command gives me the diferences between two commits, the lines that were added and deleted.

How might using version control make you more confident to make changes that could break something?
Because with version control, if something goes wrong, i can revert to a previous commit where everything was ok.

Now that you have your workspace set up, what do you want to try using Git for?
To do some version control!
